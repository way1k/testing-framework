stages:
  - testing # Запуск тестов
  - history_copy # Копирование результата тестов из предыдущего запуска тестов
  - reports # Генерация отчета
  - deploy # Публикация отчета на gitlab pages

#docker_job:
#  stage: testing
#  tags:
#    - docker
#  image: python:3.8-alpine
#  before_script:
#    - pip install -r requirements.txt
#  script:
#    - pytest -n=4 --alluredir=../../ALLURE_RESULTS tests/ui
#
#  allow_failure: true
#  artifacts:
#    when: always
#    paths:
#      - ../../ALLURE_RESULTS
#    expire_in: 1 day
chrome_job:
  stage: testing
  services:
    - selenium/standalone-chrome
  image: python:3.8
  tags:
    - docker
  before_script:
    - pip install -r requirements.txt
  script:
    - pytest --alluredir=./ALLURE_RESULTS tests/ui
  allow_failure: true
  artifacts:
    when: always
    paths:
      - ./ALLURE_RESULTS
    expire_in: 1 day

history_job:
  stage: history_copy
  tags:
    - docker
  image: storytel/alpine-bash-curl
  script:
    - 'curl --location --output artifacts.zip "https://gitlab.com/api/v4/projects/21710298/jobs/artifacts/master/download?job=pages&job_token=$CI_JOB_TOKEN"'
    - apk add unzip
    - unzip artifacts.zip
    - chmod -R 777 public
    - cp -r ./public/history ./ALLURE_RESULTS
  allow_failure: true
  artifacts:
    paths:
      - ./ALLURE_RESULTS
    expire_in: 1 day
  rules:
    - when: always

allure_job:
  stage: reports
  tags:
    - docker
  image: frankescobar/allure-docker-service
  script:
     - allure generate -c ./ALLURE_RESULTS -o ./allure-report
  artifacts:
    paths:
      - ./ALLURE_RESULTS
      - ./allure-report
    expire_in: 1 day
  rules:
    - when: always

pages:
  stage: deploy
  script:
    - mkdir public
    - mv ./ALLURE_RESULTS* public
  artifacts:
    paths:
      - public
  rules:
    - when: always
